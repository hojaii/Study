* 인터넷의 이해

> World Wide Web (www)
	# 인터넷 : TCP/IP 기반의 네트워크가 전세계적으로 확대되어 
		하나로 연결된 네트워크의 네트워크

> TCP/IP
: 하드웨어, 운영체계, 접속매체와 관계없이 동작 할 수 있는 개방형 구조
	# OSI 7계층에서 4계층으로 단순화 (응용계층, 전송계층, 인터넷계층, 물리계층)

* HTTP Protocol

> Hyper Text Transfer Protocol (HTTP)
: www서비스를 위한 TCP/IP기반 응용 계층 프로토콜 중 하나로 무 상태 연결됨



* URL

> Uniform Resource Locator (URL)
: 특정 웹 서버의 특정 파일에 접근하기 위한 경로, 인터넷 상 자원의 위치



* 웹 프로그래밍

> 정적 웹 페이지의 처리방식
: 클라이언트가 웹 페이지를 서버에 요청하면, 웹 서버는 요청한 페이지를 내부에서 검색하고
검색된 HTML 스트림을 브라우저에 반환함

> 동적 웹 페이지의 처리방식
: 클라이언트가 웹 페이지를 서버에 JSP/서블릿 요청을 하면 WAS로 요청을 전달하고 요청에 응답할
JSP/서블릿은 JAVA Beans를 이용해서 데이터베이스에 접근하고 비즈니스 로직을 수행하여 생성된 HTML을
웹 서버로 반환하고 전달받은 HTML을 브라우저로 전송시킴



* 웹 응용프로그램

> JAVA웹 응용프로그램에 필요한 구성요소
	# 대표적으로 JSP와 Servlet으로 구성되고 엔진이 작동하기 위해 SDK에 접근해야함
	# J2EE는 웹 서버와 JSP/Servlet을 구동할수 있게 하는 소프트웨어

> JAVA Server Pages (JSP)
	# JSP는 HTML 코드 ㅈ내에 Java코드를 포함하는 형태로 구성됨
	# JSP 페이지가 처음 호출 될 때, JSP 엔진은 JSP코드를 Servlet으로 변환하고 컴파일 시키고
	Servlet엔진이 서블릿을 구동시킴
	# 복잡한 로직에는 적합하지 않음 (단순)

> Servlet (서블릿)
	# 서버에서 동작하는 Java클래스로, HttpServlet클래스를 상속함 (필요한 메서드를 Override)
	# HTML코드를 브라우저로 반환하려면 서블릿 out객체의 println메서드를 이용함
	# 복잡한 로직에 적합함 (JSP에 반대)

>> 일반적으로 웹 페이지 구성화면(HTML)은 JSP로 작성하고 로직, 프로세스를 처리하는 부분은 서블릿이 처리함



* HTML Basic
: 웹 문서의 구조와 내용을 담고있는 구조화된 문서 파일

> Tag(태그)
: <>사이에 오는 단어나 문자로 작성한 텍스트의 구조나 의미를 브라우저에 알려줌 ex)<head>, <p>, <h1>



* JSP 구동방식
: JSP가 처음 호출 될때, JSP 엔진은 JSP코드를 서블릿으로 변환 후 컴파일하고 서블릿 엔진이 컴파일된
서블릿 클래스를 호출해서 요청을 처리함



* Servlet 구동방식
: URL 패턴에 적합한 Servlet Name을 확인하고 해당 Servlet Name의 class를 확인하고
Container는 해당클래스로 HttpServletRequest와 HttpServletResponse를 객체를 전달하여 Servlet클래스는
전달받은 두 객체를 이용해서 요청을 처리함



* HTTP Request Method와 Servlet Method
> Http요청은 Get, Post를 주로 사용함
> Form을 이용한 서블릿 호출
: Get방식을 이용해서 전송하면 URL에 아이디 비밀번호가 전부 다 쓰이기때문에 POST방식 (Form)을 이용해서 호출해야한다



* Filter
: 클라이언트가 서블릿에 요청하거나 응답할때, 미리 요청이나 응답에 관련된 여러 작업을 수행하는 기능
> 필터는 javax.servlet 패키지의 Filter 인터페이스를 구현해서 만든다
